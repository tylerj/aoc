<!-- livebook:{"persist_outputs":true} -->

# 2022 Advent of Code - Day X: TBD

```elixir
Mix.install([:kino])
```

<!-- livebook:{"output":true} -->

```
:ok
```

## Links

* [Advent of Code (AoC)](https://adventofcode.com/2022/day/1)
* [AoC Puzzle Input](https://adventofcode.com/2022/day/1/input)
* [tylerj GitHub](https://github.com/tylerj/aoc/blob/main/2022/day-01.livemd)

## Prompt

### Part 1

To begin, [get your puzzle input](https://adventofcode.com/2022/day/1/input).

## Input

```elixir
input = Kino.Input.textarea("Please paste your input file:")
```

<!-- livebook:{"reevaluate_automatically":true} -->

```elixir
input = input |> Kino.Input.read()
```

<!-- livebook:{"output":true} -->

```
""
```

## Solution

```elixir
defmodule Day01 do
  defdelegate parse(input), to: __MODULE__.Input

  def part1(input) do
    input
    |> parse()
    |> Enum.map(& &1)
  end

  def part2(input) do
    input
    |> parse()
    |> Enum.map(& &1)
  end

  defmodule Input do
    def parse(input) when is_binary(input) do
      input
      |> String.split("\n")
      |> parse()
    end

    def parse(input) when is_list(input) do
      Stream.map(input, &parse_line/1)
    end

    def parse_line(line) do
      line
      # |> String.split(["-", ","])
      # |> Enum.map(&String.to_integer/1)
    end
  end
end
```

<!-- livebook:{"output":true} -->

```
{:module, Day01, <<70, 79, 82, 49, 0, 0, 8, ...>>,
 {:module, Day01.Input, <<70, 79, 82, ...>>, {:parse_line, 1}}}
```

<!-- livebook:{"reevaluate_automatically":true} -->

```elixir
Day01.part1(input)
```

<!-- livebook:{"output":true} -->

```
[""]
```

## Tests

<!-- livebook:{"reevaluate_automatically":true} -->

```elixir
ExUnit.start(auto_run: false)

defmodule Day01Test do
  use ExUnit.Case, async: false

  setup_all do
    [
      input: ""
    ]
  end

  describe "part1/1" do
    test "returns expected value", %{input: input} do
      assert Day01.part1(input) == [""]
    end
  end

  describe "part2/1" do
    test "returns expected value", %{input: input} do
      assert Day01.part2(input) == [""]
    end
  end
end

ExUnit.run()
```

<!-- livebook:{"output":true} -->

```
..
Finished in 0.00 seconds (0.00s async, 0.00s sync)
2 tests, 0 failures

Randomized with seed 533814
```

<!-- livebook:{"output":true} -->

```
%{excluded: 0, failures: 0, skipped: 0, total: 2}
```
